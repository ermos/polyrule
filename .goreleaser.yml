builds:
  - binary: polyrule
    goos:
      - darwin
      - linux
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0

release:
  prerelease: auto

universal_binaries:
  - replace: true

checksum:
  name_template: 'checksums.txt'

snapcrafts:
  -
    # The name of the snap. This is optional.
    # Default is project name.
    name: polyrule

    # Whether to publish the snap to the snapcraft store.
    # Remember you need to `snapcraft login` first.
    # Defaults to false.
    publish: true

    # Single-line elevator pitch for your amazing snap.
    # 79 char long at most.
    summary: Software to compile validator rules into multiple languages.

    # This the description of your snap. You have a paragraph or two to tell the
    # most important story about your snap. Keep it under 100 words though,
    # we live in tweetspace and your description wants to look good in the snap
    # store.
    description: Software to compile validator rules into multiple languages.

    # Channels in store where snap will be pushed.
    # Default depends on grade:
    # * `stable` = ["edge", "beta", "candidate", "stable"]
    # * `devel` = ["edge", "beta"]
    # More info about channels here:
    # https://snapcraft.io/docs/reference/channels
    #
    # Templateable since v1.15.
    channel_templates:
      - edge
      - beta
      - candidate
      - stable
      - '{{ .Major }}.{{ .Minor }}/edge'
      - '{{ .Major }}.{{ .Minor }}/beta'
      - '{{ .Major }}.{{ .Minor }}/candidate'
      - '{{ .Major }}.{{ .Minor }}/stable'

    # A guardrail to prevent you from releasing a snap to all your users before
    # it is ready.
    # `devel` will let you release only to the `edge` and `beta` channels in the
    # store. `stable` will let you release also to the `candidate` and `stable`
    # channels.
    grade: stable

    # Snaps can be setup to follow three different confinement policies:
    # `strict`, `devmode` and `classic`. A strict confinement where the snap
    # can only read and write in its own namespace is recommended. Extra
    # permissions for strict snaps can be declared as `plugs` for the app, which
    # are explained later. More info about confinement here:
    # https://snapcraft.io/docs/reference/confinement
    confinement: strict

    # Your app's license, based on SPDX license expressions:
    # https://spdx.org/licenses
    # Default is empty.
    license: MIT

    # A snap of type base to be used as the execution environment for this snap.
    # Valid values are:
    # * bare - Empty base snap;
    # * core - Ubuntu Core 16;
    # * core18 - Ubuntu Core 18.
    # Default is empty.
    base: core18

    # Each binary built by GoReleaser is an app inside the snap. In this section
    # you can declare extra details for those binaries. It is optional.
    # See: https://snapcraft.io/docs/snapcraft-app-and-service-metadata
    apps:

      # The name of the app must be the same name as the binary built or the snapcraft name.
      polyrule:


        # You can override the command name.
        # Default is the app name.
        command: polyrule

        plugs: ["system-files"]